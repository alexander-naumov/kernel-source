From: Alex Williamson <alex.williamson@redhat.com>
Date: Fri, 3 Nov 2017 10:50:31 -0600
Subject: iommu/amd: Fix alloc_irq_index() increment
Git-commit: 07d1c91b6c649705fdd9acf58001071845ecf068
Patch-mainline: v4.15-rc1
References: bsc#975772

On an is_allocated() interrupt index, we ALIGN() the current index and
then increment it via the for loop, guaranteeing that it is no longer
aligned for alignments >1.  We instead need to align the next index,
to guarantee forward progress, moving the increment-only to the case
where the index was found to be unallocated.

Fixes: 37946d95fc1a ('iommu/amd: Add align parameter to alloc_irq_index()')
Signed-off-by: Alex Williamson <alex.williamson@redhat.com>
Acked-by: Joerg Roedel <jroedel@suse.de>
---
 drivers/iommu/amd_iommu.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

--- a/drivers/iommu/amd_iommu.c
+++ b/drivers/iommu/amd_iommu.c
@@ -3845,13 +3845,12 @@ static int alloc_irq_index(u16 devid, in
 
 	/* Scan table for free entries */
 	for (index = ALIGN(table->min_index, alignment), c = 0;
-	     index < MAX_IRQS_PER_TABLE;
-	     ++index) {
+	     index < MAX_IRQS_PER_TABLE;) {
 		if (table->table[index] == 0) {
 			c += 1;
 		} else {
 			c     = 0;
-			index = ALIGN(index, alignment);
+			index = ALIGN(index + 1, alignment);
 			continue;
 		}
 
@@ -3862,6 +3861,8 @@ static int alloc_irq_index(u16 devid, in
 			index -= count - 1;
 			goto out;
 		}
+
+		index++;
 	}
 
 	index = -ENOSPC;
