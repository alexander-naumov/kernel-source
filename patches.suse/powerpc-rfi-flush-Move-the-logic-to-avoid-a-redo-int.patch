From 827349ae5c8021af12abc581d0d4c65547afc1ce Mon Sep 17 00:00:00 2001
From: Michael Ellerman <mpe@ellerman.id.au>
Date: Wed, 10 Jan 2018 22:47:40 +1100
Subject: [PATCH 1/2] powerpc/rfi-flush: Move the logic to avoid a redo into
 the sysfs code

Patch-mainline: no, under development
References: bsc#1068032, bsc#1075087

rfi_flush_enable() includes a check to see if we're already
enabled (or disabled), and in that case does nothing.

But that means calling setup_rfi_flush() a 2nd time doesn't actually
work, which is a bit confusing.

Move that check into the sysfs code, where it really belongs.

Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>
[mauricfo: sysfs.c hunk 1: update context lines]
Signed-off-by: Mauricio Faria de Oliveira <mauricfo@linux.vnet.ibm.com>
Acked-by: Michal Suchanek <msuchanek@suse.de>
---
 arch/powerpc/kernel/setup_64.c | 3 ---
 arch/powerpc/kernel/sysfs.c    | 9 +++++++--
 2 files changed, 7 insertions(+), 5 deletions(-)

diff --git a/arch/powerpc/kernel/setup_64.c b/arch/powerpc/kernel/setup_64.c
index ca50bdb0ad28..669a59792977 100644
--- a/arch/powerpc/kernel/setup_64.c
+++ b/arch/powerpc/kernel/setup_64.c
@@ -884,9 +884,6 @@ static void do_nothing(void *unused)
 
 void rfi_flush_enable(bool enable)
 {
-	if (rfi_flush == enable)
-		return;
-
 	if (enable) {
 		do_rfi_flush_fixups(enabled_flush_types);
 		on_each_cpu(do_nothing, NULL, 1);
diff --git a/arch/powerpc/kernel/sysfs.c b/arch/powerpc/kernel/sysfs.c
index 2266b1494756..d09710429411 100644
--- a/arch/powerpc/kernel/sysfs.c
+++ b/arch/powerpc/kernel/sysfs.c
@@ -509,6 +509,7 @@ static ssize_t __used store_rfi_flush(struct device *dev,
 		struct device_attribute *attr, const char *buf,
 		size_t count)
 {
+	bool enable;
 	int val;
 	int ret = 0;
 
@@ -517,12 +518,16 @@ static ssize_t __used store_rfi_flush(struct device *dev,
 		return -EINVAL;
 
 	if (val == 1)
-		rfi_flush_enable(true);
+		enable = true;
 	else if (val == 0)
-		rfi_flush_enable(false);
+		enable = false;
 	else
 		return -EINVAL;
 
+	/* Only do anything if we're changing state */
+	if (enable != rfi_flush)
+		rfi_flush_enable(enable);
+
 	return count;
 }
 
-- 
2.13.6

