From 28ce61ad038e9e13754c43b64129a210318aaf0c Mon Sep 17 00:00:00 2001
From: Michal Suchanek <msuchanek@suse.de>
Date: Fri, 19 Jan 2018 14:12:11 +0100
Subject: [PATCH] powerpc/rfi-flush: prevent crash when changing flush type to
 fallback after system boot.

References: bsc#1068032, bsc#1075087
Patch-mainline: no, under development

The known problem is with the fallback area which can be allocated only
during early init but the post-mobility fixup can be called at any time.
Nothing in setup_64 checks the return of memblock_allocate_base and in
this case it can fail and crash the system.

So to fix this properly init_fallback_flush should be called
unconditionally during early init (and annotated with __init) whereas
*-setup_rfi_flush should be called late with the fallback area already
set up in case it will be needed.

Since I do not have time to figure out the correct place to hook up
init_fallback_flush and *-setup_rfi_flush separately I will just merge a
small fix that calls init_fallback_flush unconditionally every time in
setup_rfi_flush so it will get the allocation the first time around and
should not crash any more than it does without migration support.

Signed-off-by: Michal Suchanek <msuchanek@suse.de>
---
 arch/powerpc/kernel/setup_64.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/arch/powerpc/kernel/setup_64.c b/arch/powerpc/kernel/setup_64.c
index 5b1f46aa2252..8ba8cb2449a9 100644
--- a/arch/powerpc/kernel/setup_64.c
+++ b/arch/powerpc/kernel/setup_64.c
@@ -930,9 +930,10 @@ static void init_fallback_flush(void)
 
 void setup_rfi_flush(enum l1d_flush_type types, bool enable)
 {
+	init_fallback_flush();
+
 	if (types & L1D_FLUSH_FALLBACK) {
 		pr_info("rfi-flush: Using fallback displacement flush\n");
-		init_fallback_flush();
 	}
 
 	if (types & L1D_FLUSH_ORI)
-- 
2.13.6

