From: Miroslav Benes <mbenes@suse.cz>
Subject: x86/kaiser: Remove a user mapping of cpu_tss structure
Patch-mainline: No, SUSE-specific
References: bsc#1077560 bsc#1083836

The original cpu_tss should not be used for anything serious now. Remove
its user mapping.

Signed-off-by: Miroslav Benes <mbenes@suse.cz>
---
 arch/x86/include/asm/processor.h |    3 +--
 arch/x86/kernel/process.c        |    6 +-----
 2 files changed, 2 insertions(+), 7 deletions(-)

--- a/arch/x86/include/asm/processor.h
+++ b/arch/x86/include/asm/processor.h
@@ -312,9 +312,8 @@ struct tss_struct {
 	unsigned long		SYSENTER_stack[64];
 
 } __attribute__((__aligned__(PAGE_SIZE)));
-
 #ifndef __GENKSYMS__
-DECLARE_PER_CPU_PAGE_ALIGNED_USER_MAPPED(struct tss_struct, cpu_tss);
+DECLARE_PER_CPU_PAGE_ALIGNED(struct tss_struct, cpu_tss);
 #else
 DECLARE_PER_CPU_SHARED_ALIGNED(struct tss_struct, cpu_tss);
 #endif
--- a/arch/x86/kernel/process.c
+++ b/arch/x86/kernel/process.c
@@ -39,11 +39,7 @@
  * section. Since TSS's are completely CPU-local, we want them
  * on exact cacheline boundaries, to eliminate cacheline ping-pong.
  */
-#if defined(CONFIG_GENKSYMS)
-__visible DEFINE_PER_CPU_SHARED_ALIGNED(struct tss_struct, cpu_tss) = {
-#else
-__visible DEFINE_PER_CPU_PAGE_ALIGNED_USER_MAPPED(struct tss_struct, cpu_tss) = {
-#endif
+__visible DEFINE_PER_CPU_PAGE_ALIGNED(struct tss_struct, cpu_tss) = {
 	.x86_tss = {
 		.sp0 = TOP_OF_INIT_STACK,
 #ifdef CONFIG_X86_32
